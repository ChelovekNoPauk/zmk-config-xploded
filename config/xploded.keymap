/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

/ {
    macros {
        change_lang: lang_change {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1 &kp LA(LEFT_SHIFT)>;
            label = "LANG_CHANGE";
        };

        sel_line: sel_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SEL_LINE";
        };

        from_ru_to_game: from_ru_to_game {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1 &tog 4 &kp LA(LEFT_SHIFT)>;
            label = "FROM_RU_TO_GAME";
        };
    };

    combos {
        compatible = "zmk,combos";

        boot {
            bindings = <&bootloader>;
            key-positions = <4 5 6 7>;
            layers = <0>;
        };

        rst {
            bindings = <&sys_reset>;
            key-positions = <0 1 11 10>;
        };

        soft_off {
            bindings = <&soft_off>;
            key-positions = <36 37 46 47>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        EN {
            bindings = <
&kp ESC       &mt LS(GRAVE) LS(NUMBER_1)  &mt LS(NUMBER_2) GRAVE  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &mt LS(NUMBER_8) LS(NUMBER_7)  &kp APOS           &mt LS(NUMBER_0) LS(NUMBER_9)  &kp MINUS      &kp EQUAL
&mt CAPS TAB  &mt LCTRL Q                 &mt LSHIFT W            &mt LALT E        &mt LGUI R        &kp T               &kp Y             &kp U                          &kp I              &kp O                          &kp P          &kp C_VOL_UP
&kp LG(TAB)   &mt LGUI A                  &mt LALT S              &mt LSHIFT D      &mt LCTRL F       &kp G               &kp H             &mt RCTRL J                    &mt RSHIFT K       &mt RALT L                     &mt RGUI SEMI  &kp C_PP
&kp PSCRN     &kp Z                       &kp X                   &kp C             &kp V             &kp B               &kp N             &kp M                          &kp COMMA          &kp DOT                        &kp SLASH      &kp C_VOL_DN
                                                                  &mo 3             &kp BACKSPACE     &kp DELETE          &change_lang      &kp LEFT_BRACKET               &kp RIGHT_BRACKET
                                                                                    &mo 2             &kp ENTER           &tog 4            &kp SPACE
            >;
        };

        RU {
            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp GRAVE  &kp LS(NUMBER_4)  &trans    &kp LS(NUMBER_6)  &mt LS(NUMBER_8) LS(NUMBER_7)  &kp O   &trans  &trans            &trans
&trans  &trans            &trans            &trans     &trans            &trans    &trans            &trans                         &trans  &kp P   &kp LEFT_BRACKET  &trans
&trans  &trans            &trans            &trans     &trans            &trans    &trans            &trans                         &trans  &trans  &trans            &trans
&trans  &trans            &trans            &trans     &trans            &trans    &trans            &mt RIGHT_BRACKET M            &trans  &trans  &kp SINGLE_QUOTE  &trans
                                            &trans     &trans            &trans    &change_lang      &kp SLASH                      &none
                                                       &trans            &trans    &from_ru_to_game  &trans
            >;
        };

        NUM_FN {
            bindings = <
&trans  &kp KP_DOT       &kp KP_LEFT_PARENTHESIS  &kp KP_RIGHT_PARENTHESIS  &kp BACKSLASH    &kp PERCENT        &kp F1     &kp F2         &kp F3  &kp F4   &kp F5   &kp F6
&trans  &kp KP_DIVIDE    &kp KP_N7                &kp KP_N8                 &kp KP_NUMBER_9  &kp KP_SUBTRACT    &kp F7     &kp F8         &kp F9  &kp F10  &kp F11  &kp F12
&trans  &kp KP_MULTIPLY  &kp KP_N4                &kp KP_NUMBER_7           &kp KP_NUMBER_6  &kp KP_PLUS        &none      &none          &none   &none    &none    &none
&trans  &kp KP_N0        &kp KP_N1                &kp KP_NUMBER_2           &kp KP_NUMBER_3  &kp KP_EQUAL       &none      &none          &none   &none    &none    &none
                                                  &none                     &none            &none              &kp DEL    &kp BACKSPACE  &none
                                                                            &none            &none              &kp ENTER  &kp SPACE
            >;
        };

        NAV {
            bindings = <
&trans  &none         &kp LC(A)       &kp LC(Z)       &kp LC(Y)        &mt LC(LS(S)) LC(S)    &none      &none          &none           &none    &none  &bt BT_CLR
&trans  &none         &sel_line       &kp UP_ARROW    &mt LC(X) LC(C)  &kp LC(V)              &kp INS    &none          &kp PAGE_UP     &none    &none  &bt BT_SEL 0
&trans  &kp LC(LEFT)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(RIGHT_ARROW)    &none      &kp HOME       &kp PAGE_DOWN   &kp END  &none  &bt BT_SEL 1
&trans  &none         &none           &none           &none            &none                  &none      &none          &none           &none    &none  &bt BT_SEL 2
                                      &none           &none            &none                  &kp DEL    &kp BACKSPACE  &kp LEFT_SHIFT
                                                      &none            &none                  &kp ENTER  &kp SPACE
            >;
        };

        GAME {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp Q         &kp E         &kp W         &kp R           &kp T        &kp Y   &kp U   &kp I   &kp O   &kp P   &kp C_VOLUME_UP
&trans  &kp F         &kp A         &kp S         &kp D           &kp G        &kp H   &kp J   &kp K   &kp L   &none   &kp C_PP
&trans  &kp Z         &kp X         &kp C         &kp V           &kp B        &kp N   &kp M   &none   &none   &none   &kp C_VOL_DN
                                    &kp LEFT_ALT  &kp LS(LSHIFT)  &kp LCTRL    &none   &none   &none
                                                  &kp SPACE       &kp ENTER    &tog 4  &none
            >;
        };
    };
};
