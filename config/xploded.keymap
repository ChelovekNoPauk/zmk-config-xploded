/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <280>;
};

/ {
    macros {
        change_lang: lang_change {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 2 &kp LA(LEFT_SHIFT)>;
            label = "LANG_CHANGE";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&lt 7 ESC        &kp LC(A)   &mt LC(X) LC(C)  &mt LC(LS(V)) LC(V)  &kp LC(Z)          &kp LC(Y)     &mt F2 F1  &mt F4 F3     &mt F6 F5     &mt F8 F7   &mt F10 F9     &mt F12 F11
&mt CAPS TAB     &kp Q       &kp W            &kp E                &kp R              &kp T         &kp Y      &kp U         &kp I         &kp O       &kp P          &kp C_VOL_UP
&kp PRINTSCREEN  &mt LGUI A  &mt LALT S       &mt LSHIFT D         &mt LCTRL F        &kp G         &kp H      &mt RCTRL J   &mt RSHIFT K  &mt RALT L  &mt RGUI SEMI  &kp C_PP
&kp LG(D)        &kp Z       &kp X            &kp C                &kp V              &kp B         &kp N      &kp M         &kp COMMA     &kp DOT     &kp SLASH      &kp C_VOL_DN
                                              &mo 1                &kp BACKSPACE      &kp DELETE    &kp ENTER  &kp SPACE     &mo 4
                                                                   &kp LC(BACKSPACE)  &none         &tog 5     &change_lang
            >;
        };

        en_sym {
            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)      &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp RS(N8)       &kp LS(N9)        &kp LS(N0)         &none
&trans  &kp GRAVE         &kp N7                &kp N8            &kp N9             &none               &none             &none             &kp MINUS        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &kp LEFT_GUI      &mt LALT KP_NUMBER_4  &mt LSHFT KP_N5   &mt LCTRL KP_N6    &none               &none             &kp LCTRL         &mt LSHFT EQUAL  &mt LALT SQT      &mt LGUI BSLH      &trans
&none   &kp N0            &kp N1                &kp N2            &kp N3             &none               &none             &none             &none            &none             &none              &trans
                                                &none             &kp BSPC           &kp DEL             &none             &none             &none
                                                                  &kp LC(BACKSPACE)  &none               &none             &none
            >;
        };

        ru {
            bindings = <
&trans  &kp LC(C)       &mt LC(X) LC(C)  &mt LC(LS(V)) LC(V)  &kp LC(Z)     &kp LC(Y)      &mt F2 F1  &mt F4 F3            &mt F6 F5    &mt F8 F7   &mt F10 F9          &mt F12 F11
&trans  &kp Q           &kp W            &kp E                &kp R         &mt GRAVE T    &kp Y      &kp U                &mt O I      &kp LBKT    &kp P               &trans
&trans  &mt LEFT_GUI A  &mt LALT S       &mt LSHFT D          &mt LCTRL F   &kp G          &kp H      &mt LCTRL J          &mt LSHFT K  &mt LALT L  &mt LGUI SEMICOLON  &trans
&trans  &kp Z           &kp X            &kp C                &kp V         &kp B          &kp N      &mt RIGHT_BRACKET M  &kp COMMA    &kp DOT     &kp FSLH            &trans
                                         &mo 3                &kp BSPC      &kp DEL        &kp RET    &kp SPACE            &mo 4
                                                              &kp LC(BSPC)  &none          &tog 5     &change_lang
            >;
        };

        ru_sym {
            bindings = <
&trans  &kp LS(EXCL)     &kp LS(AT)            &kp LS(POUND)    &kp LS(DLLR)           &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)     &kp LS(LPAR)   &kp LS(RPAR)  &none
&trans  &none            &kp KP_N7             &kp KP_NUMBER_8  &kp KP_NUMBER_9        &none            &none          &none         &kp MINUS        &none          &none         &trans
&trans  &kp LEFT_GUI     &mt LALT KP_NUMBER_4  &mt LSHFT KP_N5  &mt LCTRL KP_NUMBER_6  &none            &none          &kp LCTRL     &mt LSHFT EQUAL  &mt LALT BSLH  &kp LGUI      &trans
&trans  &kp KP_NUMBER_0  &kp KP_N1             &kp KP_N2        &kp KP_NUMBER_3        &none            &none          &none         &none            &none          &none         &trans
                                               &none            &kp BSPC               &kp DEL          &none          &none         &none
                                                                &kp LC(BSPC)           &none            &none          &none
            >;
        };

        nav {
            bindings = <
&trans  &kp LC(A)  &mt LC(X) LC(C)  &mt LC(LS(V)) LC(V)  &kp LC(Z)     &kp LC(Y)    &none      &kp U          &kp RSHFT  &kp O     &kp G     &none
&trans  &none      &none            &kp UP               &none         &kp PG_UP    &kp COMMA  &kp SEMICOLON  &kp I      &kp SQT   &kp C     &none
&trans  &kp HOME   &kp LEFT         &kp DOWN             &kp RIGHT     &kp END      &kp M      &kp J          &kp K      &kp L     &kp F     &none
&trans  &kp LGUI   &kp LALT         &kp LSHFT            &kp LCTRL     &kp PG_DN    &none      &kp LCTRL      &kp LSHFT  &kp LALT  &kp LGUI  &none
                                    &none                &kp BSPC      &kp DEL      &none      &none          &none
                                                         &kp LC(BSPC)  &tog 4       &none      &none
            >;
        };

        GAME {
            bindings = <
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp GRAVE  &none     &none      &kp SEMI  &kp SQT   &none
&trans     &kp Q         &kp E         &kp W         &kp R         &kp T        &kp Y      &kp U     &kp I      &kp O     &kp P     &kp C_VOLUME_UP
&kp LALT   &kp F         &kp A         &kp S         &kp D         &kp G        &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp C_PP
&kp LCTRL  &kp Z         &kp X         &kp C         &kp V         &kp B        &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp C_VOL_DN
                                       &mo 6         &kp LCTRL     &kp LSHFT    &kp DEL    &kp BSPC  &none
                                                     &kp LALT      &kp SPACE    &none      &none
            >;
        };

        game_raise {
            bindings = <
&kp F1  &kp F2  &kp F3    &kp F4    &kp F5     &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none     &kp UP    &none      &none     &none   &none   &none   &none    &none    &none
&none   &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none     &none   &none   &none   &none    &none    &none
&none   &none   &none     &none     &none      &none     &none   &none   &none   &none    &none    &none
                          &none     &none      &none     &none   &none   &none
                                    &none      &none     &none   &none
            >;
        };

        sys {
            bindings = <
&none         &bt BT_CLR     &bt BT_CLR_ALL  &none  &none  &soft_off      &none        &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2    &none  &none  &bootloader    &bootloader  &none  &none  &none  &none  &none
&none         &none          &none           &none  &none  &none          &none        &none  &none  &none  &none  &none
&to 0         &kp LA(LSHFT)  &none           &none  &none  &none          &none        &none  &none  &none  &none  &none
                                             &none  &none  &none          &none        &none  &none
                                                    &none  &none          &none        &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
