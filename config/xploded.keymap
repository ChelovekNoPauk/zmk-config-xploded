/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        alt_apos: alt_apos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N9>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_APOS";
        };

        alt_quot: alt_quot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N4>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_QUOT";
        };

        alt_grave: alt_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N6>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_GRAVE";
        };

        alt_comma: alt_comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_COMMA";
        };

        alt_scolon: alt_scolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_SCOLON";
        };

        alt_colon: alt_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N8>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_COLON";
        };

        alt_bslash: alt_bslash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N2>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_BSLASH";
        };

        alt_at: alt_at {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N4>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_AT";
        };

        to_ru: lang_change {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 0 &kp LA(LEFT_SHIFT)>;
            label = "LANG_CHANGE";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 0 &kp LA(LEFT_SHIFT)>;
            label = "TO_EN";
        };

        alt_caret: alt_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_N4>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_CARET";
        };

        arrow_right: arrow_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW_RIGHT";
        };

        alt_tilda: alt_tilda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_TILDA";
        };

        alt_column: alt_column {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALT_COLUMN";
        };

        sel_line: sel_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SEL_LINE";
        };

        from_ru_to_game: from_ru_to_game {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 0 &kp LA(LEFT_SHIFT)>;
            label = "FROM_RU_TO_GAME";
        };
    };

    combos {
        compatible = "zmk,combos";

        boot {
            bindings = <&bootloader>;
            key-positions = <4 5 6 7 8>;
            layers = <0>;
        };
    };

    behaviors {
        td_apos_grave: td_apos_grave {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_APOS_GRAVE";
            bindings = <&alt_grave>, <&alt_apos>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        td_col_scol: td_col_scol {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_COL_SCOL";
            bindings = <&alt_scolon>, <&alt_colon>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        td_slash_bslash: td_slash_bslash {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_SLASH_BSLASH";
            bindings = <&alt_bslash>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        EN {
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp N1   &kp Q   &kp W   &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P     &kp N1
&kp N2   &kp A   &kp S   &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp N2
&kp N3   &kp Z   &kp X   &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp N3
                         &kp N1  &kp N2  &kp N3    &kp N1  &kp N2  &kp N3
                                 &kp N4  &kp N5    &kp N4  &kp N5
            >;
        };
    };
};
